---
- name: Install package deps for RT
  apt: name={{ item }} state=present update_cache=yes cache_valid_time={{ apt_cache_valid_time }}
  with_items:
    - libssl-dev
    - graphviz-dev
    - libxml2-dev
    - libexpat1-dev
    - libgd-dev
    - libmariadbclient-dev

- name: Create /opt/src
  file:
    path: /opt/src
    state: directory

- include_vars: rt_versions.yml

- name: Download RT
  get_url:
    url: https://download.bestpractical.com/pub/rt/release/{{ rt_version }}.tar.gz
    dest: /opt/src/{{ rt_version }}.tar.gz
    validate_certs: yes
    sha256sum: "{{ rt[rt_version].checksum }}"
    force: no

- name: Untar and ungzip RT
  unarchive:
    copy: no
    src: /opt/src/{{ rt_version }}.tar.gz
    dest: /opt/src
    creates: /opt/src/{{ rt_version }}
    owner: root
    group: root

- name: Configure RT
  shell: |
    source ${PERLBREW_ROOT}/etc/bashrc
    perlbrew switch 5.10.1
    ./configure \
    --enable-developer \
    --enable-graphviz \
    --enable-gd
#    --enable-gpg \
#    --enable-smime
  args:
    chdir: /opt/src/{{ rt_version }}
    creates: /opt/src/{{ rt_version }}/config.status

- name: Test RT dependencies
  shell: |
    source ${PERLBREW_ROOT}/etc/bashrc
    perlbrew switch 5.10.1
    make testdeps
  args:
    chdir: /opt/src/{{ rt_version }}
  register: rt_testdeps
  changed_when: False
  failed_when: False

- include_vars: pinned_cpan_packages.yml
  
- block:
    - name: Install pinned CPAN packages
      shell: |
        source ${PERLBREW_ROOT}/etc/bashrc
        perlbrew switch 5.10.1
        cpanm {{ cpanm_notest | ternary('--notest','--no-notest') }} {{ item }}
      register: perlbrew_cpanm_result
      changed_when: >
        perlbrew_cpanm_result|success and
        perlbrew_cpanm_result.stdout_lines|length > 1
      with_items: "{{ perl_5_10_1 }}"

    - name: Fix RT dependencies
      environment:
        RT_FIX_DEPS_CMD: /opt/perl5/bin/cpanm
        PERL_CPANM_OPT: "{{ cpanm_notest | ternary('--notest','--no-notest') }}"
      shell: |
        source ${PERLBREW_ROOT}/etc/bashrc
        perlbrew switch 5.10.1
        make -j {{ansible_processor_vcpus + 1 }} fixdeps
      args:
        chdir: /opt/src/{{ rt_version }}

  when: rt_testdeps|failed

  # Several extensions depend on this module, which make fixdeps does
  # not install
- name: "Install DateTime::Set"
  shell: |
    source ${PERLBREW_ROOT}/etc/bashrc
    perlbrew switch 5.10.1
    cpanm {{ cpanm_notest | ternary('--notest','--no-notest') }} DateTime::Set
  register: datetime_set_result
  changed_when: >
    datetime_set_result|success and
    datetime_set_result.stdout_lines|length > 1

- name: Install RT
  shell: |
    source ${PERLBREW_ROOT}/etc/bashrc
    /usr/local/bin/perlbrew switch 5.10.1
    make install
  args:
    chdir: /opt/src/{{ rt_version }}
    creates: /opt/rt4

- debug:
    msg: "TODO: Assemble RT_SiteConfig.pm from parts to avoid clobbering local changes"

- name: Install RT_SiteConfig.pm
  template:
    src: RT_SiteConfig.pm
    dest: /opt/rt4/etc/RT_SiteConfig.pm
    backup: yes
  notify: Restart Apache

- name: Set Mason cache owner
  set_fact:
    cache_owner: "{{ selinux | ternary('root','apache') }}"

- name: Set RT Mason cache attributes
  file:
    path: /opt/rt4/var/mason_data
    owner: "{{ cache_owner }}"
    group: "{{ cache_owner }}"
    mode: o+rx

- name: Create GnuPG home directory
  file:
    path: /opt/rt4/var/data/gpg
    state: directory
    owner: "{{ cache_owner }}"
    group: "{{ cache_owner }}"

- name: Create S/MIME home directory
  file:
    path: /opt/rt4/var/data/smime
    state: directory
    owner: "{{ cache_owner }}"
    group: "{{ cache_owner }}"

- name: Test rt4 database presence
  command: >
    /bin/mysql --user=root --password={{ mysql_root_password }}
    --batch --execute='show databases;'
  register: rt4_db_test
  changed_when: False

- name: Initialize RT database
  shell: |-
    source ${PERLBREW_ROOT}/etc/bashrc
    perlbrew use 5.10.1
    echo {{ mysql_root_password }} | make initialize-database
  args:
    chdir: /opt/src/{{ rt_version }}
  when: '"rt4" not in rt4_db_test.stdout_lines'

- name: Push rt4.sh
  template:
    src: rt4.sh
    dest: /etc/profile.d/rt4.sh
